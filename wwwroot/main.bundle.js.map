{"version":3,"sources":["/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/$_lazy_route_resource lazy","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/api.service.ts","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.component.css","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.component.html","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.component.ts","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.module.ts","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/message.service.ts","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/environments/environment.ts","/media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { environment } from '../environments/environment';\n\nimport { MessageService } from './message.service'\nexport class Settings {\n  area_1_enabled: boolean;\n  area_1_name: string;\n  area_1_pin: number;\n  area_2_enabled: boolean;\n  area_2_name: string;\n  area_2_pin: number;\n  temperature: number;\n  temperature_interval_seconds: number;\n  temperature_margin: number;\n  temperature_pin: number;\n}\n@Injectable()\nexport class ApiService {\n  public dateFormat: string = \"yyyy-MM-dd\";\n  public timeFormat: string = \"HH:mm:ss\";\n  constructor(private httpClient: HttpClient, private messageService: MessageService) { }\n  getSettings(): Observable<Settings> {\n    return this.httpClient.get<Settings>(environment.api + \"settings\")\n      .catch(x => this.handleError(x, \"Uitlezen instellingen mislukt\"))\n  }\n  setSettings(settings: Settings): Observable<Settings> {\n    return this.httpClient.post<Settings>(environment.api + \"settings\", settings)\n      .catch(x => this.handleError(x, \"Opslaan instellingen mislukt\"))\n  }\n  getStatus(): Observable<any> {\n    return this.httpClient.get<any>(environment.api + \"status\")\n      .catch(x => this.handleError(x, \"Uitlezen sensors mislukt\"))\n  }\n  private handleError(error: HttpErrorResponse | any, message: string = 'Data laden mislukt') {\n    if (error.status == 0) { this.messageService.snackBarOpen(\"API server niet beschikbaar\"); }\n    else { this.messageService.snackBarOpen(message + \" (\" + error.status + \")\"); }\n    return Observable.throw(error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/api.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  position: absolute;\\n  top: 5px;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.example-radio-group {\\n  display: block;\\n  border: 1px solid #555;\\n  margin: 20px;\\n  padding: 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-progress-bar color=\\\"accent\\\" mode=\\\"determinate\\\" [value]=\\\"percentage\\\"></mat-progress-bar>\\n<mat-sidenav-container class=\\\"example-container\\\">\\n  <mat-sidenav #sidenav [mode]=\\\"mode.value\\\" style=\\\"overflow-x: hidden;\\\">\\n    <mat-toolbar>\\n      <span style=\\\"flex:1\\\">Menu</span>\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n    <p style=\\\"text-align: center;\\\">\\n      <img src=\\\"/assets/icon.png\\\" class=\\\"margin1\\\">\\n    </p>\\n    <mat-nav-list class=\\\"margin1\\\">\\n      <a mat-list-item href=\\\"https://angular.io\\\" target=\\\"_blank\\\">Angular</a>\\n      <a mat-list-item href=\\\"https://material.angular.io\\\" target=\\\"_blank\\\">Material</a>\\n      <a mat-list-item href=\\\"https://material.io/guidelines/style/color.html#color-color-palette\\\" target=\\\"_blank\\\">Themes</a>\\n      <a mat-list-item href=\\\"https://material.io/icons/\\\" target=\\\"_blank\\\">Icons</a>\\n    </mat-nav-list>\\n\\n    <mat-radio-group class=\\\"margin1 padding1\\\" style=\\\"margin-top:40px; display:block; text-align:center\\\" [formControl]=\\\"mode\\\">\\n      <label>Mode:</label>\\n      <mat-radio-button value=\\\"over\\\">Over</mat-radio-button>\\n      <mat-radio-button value=\\\"side\\\">Side</mat-radio-button>\\n      <mat-radio-button value=\\\"push\\\">Push</mat-radio-button>\\n    </mat-radio-group>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content style=\\\"display:flex; flex-direction: column;\\\">\\n    <mat-toolbar>\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <span style=\\\"flex:1\\\"></span>\\n      <span>Raspberry Pi</span>\\n      <span style=\\\"flex:1\\\"></span>\\n      <button mat-icon-button (click)=\\\"togglePaused()\\\" matTooltip=\\\"Sensors automatisch uitlezen weer starten\\\" *ngIf=\\\"paused\\\">\\n        <mat-icon color=\\\"primary\\\">play_arrow</mat-icon>\\n      </button>\\n      <button mat-icon-button (click)=\\\"togglePaused()\\\" matTooltip=\\\"Sensors uitlezen pauzeren\\\" *ngIf=\\\"!paused\\\">\\n        <mat-icon>pause</mat-icon>\\n      </button>\\n      <button mat-icon-button (click)=\\\"refresh()\\\" matTooltip=\\\"Instellingen opnieuw ophalen en sensors uitlezen\\\">\\n        <mat-icon>refresh</mat-icon>\\n      </button>\\n      <button mat-icon-button (click)=\\\"save()\\\" matTooltip=\\\"Instellingen opslaan\\\" *ngIf=\\\"saveEnabled()\\\">\\n        <mat-icon color=\\\"primary\\\">save</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n\\n    <div style=\\\"overflow:auto; flex:1;\\\">\\n      <mat-tab-group>\\n        <mat-tab label=\\\"Thermostaat\\\">\\n          <div class=\\\"margin1\\\">\\n            <h1>Welkom bij de thermostaat</h1>\\n            <p>Hier kunt u de status bekijken.</p>\\n          </div>\\n          <div class=\\\"cards1\\\">\\n            <mat-card>\\n              <mat-card-content style=\\\"display:flex; flex-wrap: wrap\\\" class=\\\"nomargin\\\">\\n                <span>\\n                  <h1>{{status?.slimmeMeter?.read_time | date:apiService.timeFormat}}</h1>\\n                </span>\\n                <span style=\\\"flex:1\\\"></span>\\n                <span>\\n                  <h1>{{status?.slimmeMeter?.watt}} Watt</h1>\\n                </span>\\n                <div class=\\\"break\\\" style=\\\"height:50px\\\"></div>\\n                <span style=\\\"flex:1;\\\">\\n                  <mat-icon class=\\\"hide-sm\\\" *ngIf=\\\"status?.heating==true\\\" color=\\\"primary\\\" style=\\\"font-size:90px; width:90px; height:90px; padding-top:15px;\\\">flash_on</mat-icon>&nbsp;\\n                  <mat-icon class=\\\"hide-md hide-lg\\\" *ngIf=\\\"status?.heating==true\\\" color=\\\"primary\\\" style=\\\"font-size:56px; width:56px; height:56px\\\">flash_on</mat-icon>&nbsp;\\n                </span>\\n                <span>\\n                  <h1 class=\\\"hide-sm mat-display-4\\\">{{status?.dht22?.temperature | number:'1.1-1'}}&nbsp;</h1>\\n                  <h1 class=\\\"hide-md hide-lg mat-display-3\\\">{{status?.dht22?.temperature | number:'1.1-1'}}&nbsp;</h1>\\n                </span>\\n                <span class=\\\"hide-sm mat-h1\\\" style=\\\"padding-top:10px;\\\">℃</span>\\n                <span class=\\\"hide-md hide-lg mat-h1\\\">℃</span>\\n                <span style=\\\"flex:1\\\"></span>\\n                <div class=\\\"break\\\" style=\\\"height:50px\\\"></div>\\n                <div style=\\\"display:flex; align-items:center;\\\">\\n                  <button mat-icon-button (click)=\\\"quick(-0.5)\\\" matTooltip=\\\"Thermostaat temperatuur verlagen\\\" matTooltipPosition=\\\"below\\\">\\n                    <mat-icon color=\\\"primary\\\">keyboard_arrow_down</mat-icon>\\n                  </button>\\n                  <span>\\n                    <h1>{{settings?.temperature | number:'1.1-1'}} ℃</h1>\\n                  </span>\\n                  <button mat-icon-button (click)=\\\"quick(0.5)\\\" matTooltip=\\\"Thermostaat temperatuur verhogen\\\" matTooltipPosition=\\\"below\\\">\\n                    <mat-icon color=\\\"primary\\\">keyboard_arrow_up</mat-icon>\\n                  </button>\\n                </div>\\n                <span style=\\\"flex:1\\\"></span>\\n                <span>\\n                  <h1>{{status?.dht22?.humidity | number:'1.1-1'}} %</h1>\\n                </span>\\n              </mat-card-content>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n\\n        <mat-tab label=\\\"Instellingen\\\">\\n          <div class=\\\"margin1\\\">\\n            <h1>Welkom bij de instellingen</h1>\\n            <p>Hier kunt u de instellingen wijzigen. Vergeet niet op opslaan te drukken. Dit icoon wordt zichtbaar rechtsboven\\n              als er iets is aangepast.</p>\\n          </div>\\n          <div class=\\\"cards1\\\" *ngIf=\\\"new\\\">\\n            <mat-card>\\n              <mat-card-title>Thermostaat</mat-card-title>\\n              <mat-card-content style=\\\"display:flex; flex-wrap:wrap\\\">\\n                <div class=\\\"no\\\"></div>\\n                <mat-form-field>\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"Temperatuur\\\" [(ngModel)]=\\\"new.temperature\\\">\\n                  <span matSuffix>&nbsp;℃</span>\\n                </mat-form-field>\\n                <mat-form-field>\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"In- en uitschakel marge\\\" [(ngModel)]=\\\"new.temperature_margin\\\">\\n                  <span matSuffix>&nbsp;℃</span>\\n                </mat-form-field>\\n                <mat-form-field>\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"Uitlees interval\\\" [(ngModel)]=\\\"new.temperature_interval_seconds\\\">\\n                  <span matSuffix>&nbsp;sec</span>\\n                </mat-form-field>\\n                <mat-form-field>\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"Input pin\\\" [(ngModel)]=\\\"new.temperature_pin\\\"> </mat-form-field>\\n              </mat-card-content>\\n            </mat-card>\\n            <div class=\\\"break\\\"></div>\\n            <mat-card>\\n              <mat-card-title>Ruimte 1</mat-card-title>\\n              <mat-card-content style=\\\"display:flex; flex-direction: column\\\">\\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"Naam\\\" [(ngModel)]=\\\"new.area_1_name\\\">\\n                </mat-form-field>\\n                <mat-form-field>\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"Output pin\\\" [(ngModel)]=\\\"new.area_1_pin\\\">\\n                </mat-form-field>\\n                <mat-slide-toggle [(ngModel)]=\\\"new.area_1_enabled\\\">Inschakelen</mat-slide-toggle>\\n              </mat-card-content>\\n            </mat-card>\\n            <mat-card>\\n              <mat-card-title>Ruimte 2</mat-card-title>\\n              <mat-card-content style=\\\"display:flex; flex-direction: column\\\">\\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"Naam\\\" [(ngModel)]=\\\"new.area_2_name\\\">\\n                </mat-form-field>\\n                <mat-form-field>\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"Output pin\\\" [(ngModel)]=\\\"new.area_2_pin\\\">\\n                </mat-form-field>\\n                <mat-slide-toggle [(ngModel)]=\\\"new.area_2_enabled\\\">Inschakelen</mat-slide-toggle>\\n              </mat-card-content>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Sensors\\\">\\n          <div class=\\\"margin1\\\">\\n            <h1>Thermometer, Hygrometer, Slimme meter</h1>\\n            <p>Hier kunt u alle ontvangen informatie van de sensors bekijken.</p>\\n            <pre>{{status | json}}</pre>\\n          </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Test\\\">\\n          <div class=\\\"margin1\\\">\\n            <h1>Dit is een test</h1>\\n            <p>Hier kunt u experimenten met angular componenen. Zie ook:</p>\\n            <ul>\\n              <li>\\n                <a mat-button href=\\\"https://angular.io\\\" target=\\\"_blank\\\">https://angular.io</a>\\n              </li>\\n              <li>\\n                <a mat-button href=\\\"https://material.angular.io\\\" target=\\\"_blank\\\">https://material.angular.io</a>\\n              </li>\\n            </ul>\\n\\n            <button mat-button (click)=\\\"test()\\\">Test</button>\\n            <button mat-button>Omlaag</button>\\n            <mat-checkbox>Check me!</mat-checkbox>\\n            <mat-card>Simple card</mat-card>\\n            <p>\\n              <button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button>\\n            </p>\\n            <p>\\n              <mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">\\n                <label>Menu:</label>\\n                <mat-radio-button value=\\\"over\\\">Over</mat-radio-button>\\n                <mat-radio-button value=\\\"side\\\">Side</mat-radio-button>\\n                <mat-radio-button value=\\\"push\\\">Push</mat-radio-button>\\n              </mat-radio-group>\\n            </p>\\n          </div>\\n        </mat-tab>\\n      </mat-tab-group>\\n    </div>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport * as api from './api.service'\nimport { MessageService } from './message.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(public apiService: api.ApiService, private messageService: MessageService) { }\n  ngOnInit(): void {\n    this.getSettings(false, true);\n  }\n  title = 'app';\n  mode = new FormControl('over');\n  settings: api.Settings = null\n  status: any = null\n  new: api.Settings = null\n  timer = null\n  percentage = 0\n  getSettings(inform: boolean = false, startup = false): void {\n    this.apiService.getSettings().subscribe(\n      x => {\n        this.settings = x;\n        this.new = Object.assign({}, x);\n        if(inform) this.messageService.snackBarOpen(\"Instellingen zijn opniew opgehaald\", \"OK\", 3);\n        if(startup) this.getStatus(10) // status needs settings, so call it when thay are available\n      })\n  }\n  paused = false\n  getStatus(step: number): void {\n    if(this.timer) clearTimeout(this.timer)\n    this.percentage = step * 25\n    if(step >= 5) {\n      this.apiService.getStatus().subscribe( x => { this.status = x; this.getStatus(0) })\n    }\n    else if (this.paused) this.percentage = 0\n    else {\n      this.timer = setTimeout(\n        ()=>{this.getStatus(step+1)},\n        this.settings.temperature_interval_seconds * 1000 / 5\n      )\n    }\n  }\n  refresh(): void {\n    this.getSettings(true);\n    this.getStatus(10);\n  }\n  saving = false;\n  saveEnabled(): boolean { if (_.isEqual(this.new, this.settings) || this.saving) return false; else return true; }\n  save(inform: boolean = true, alsoRefreshStatus = false) {\n    this.saving = true\n    this.apiService.setSettings(this.new).subscribe(\n      x => {\n        this.saving = false\n        this.settings = x;\n        this.new = Object.assign({}, x);\n        if (inform) this.messageService.snackBarOpen(\"Instellingen zijn opgeslagen\");\n        if (alsoRefreshStatus) this.getStatus(10);\n      }, error => this.saving = false\n    );\n  }\n  quick(change: number) {\n    if(this.new) this.new.temperature += change\n    this.save(false, true)\n  }\n  togglePaused() {\n    if (this.paused) {\n      this.paused = false\n      this.getStatus(10);\n    }\n    else this.paused = true\n  }\n  test(): void { this.messageService.snackBarOpen(\"Test\"); }\n}\n\n\n\n// WEBPACK FOOTER //\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {\nMatButtonModule, MatCardModule, MatCheckboxModule, MatFormFieldModule, MatIconModule, MatInputModule, MatListModule, MatRadioModule, MatSidenavModule, MatSlideToggleModule, MatSnackBarModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatProgressBarModule } from '@angular/material';\nimport { AppComponent } from './app.component';\nimport { ApiService } from './api.service';\nimport { MessageService } from './message.service';\n@NgModule({\n  imports: [\nBrowserModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, HttpClientModule,\n\nMatButtonModule, MatCardModule, MatCheckboxModule, MatFormFieldModule, MatIconModule, MatInputModule, MatListModule, MatRadioModule, MatSidenavModule, MatSlideToggleModule, MatSnackBarModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatProgressBarModule\n  ],\n  declarations: [ AppComponent ],\n  providers: [ApiService, MessageService, DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable()\nexport class MessageService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  snackBarOpen(message: string, action: string = \"OK\", seconds: number = 10) {\n    this.snackBar.open(message, action, { duration: seconds * 1000, });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/app/message.service.ts","export const environment = {\n  production: false,\n  api: '/api/',\n};\n\n\n\n// WEBPACK FOOTER //\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /media/jw/C/Users/jw/Documents/Python/thermostaat-client/src/main.ts"],"sourceRoot":"webpack:///"}